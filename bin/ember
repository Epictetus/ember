#!/usr/bin/ruby -w
#
# Evaluates eRuby directives in the given eRuby template and
# writes the result to the standard output stream (STDOUT).
#
#
# Usage:
#
#   ember [Options] [Source]
#
#
#   Source:   URL or path to an eRuby template file.  If this parameter
#             is not specified, then the result of reading the standard
#             input stream (STDIN) will be used as the eRuby template.
#
#
# Options:
#

require 'rubygems'
gem 'inochi', '~> 0'
require 'inochi'

# command line
  options = Inochi.main :Ember do
    opt :chomp_after, 'Omit newline after directives',
        :short => :a

    opt :strip_after, 'Omit spaces and tabs after directives',
        :short => :A

    opt :chomp_before, 'Omit newline before directives',
        :short => :b

    opt :strip_before, 'Omit spaces and tabs before directives',
        :short => :B

    opt :shorthand, 'Treat lines beginning with "%" as directives'

    opt :infer_end, 'Add "end" statements based on indentation'

    opt :unindent, 'Unindent block content hierarchically'

    opt :compile, 'Print template program and exit'
  end

# program body
  template =
    if source = ARGV.shift
      Ember::Template.load(source, options)
    else
      Ember::Template.new(STDIN.read, options)
    end

  if options[:compile]
    puts template
  else
    puts template.render
  end
